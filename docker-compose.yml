version: '3.9'
services:
  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Docker-in-Docker
  dind:
    build:
      context: ./dind
      dockerfile: Dockerfile
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: ""
    networks:
      - app-network
    expose:
      - "2375"
    ports:
      - "2375:2375"
    volumes:
      - dind_data:/var/lib/docker
      - repos_data:/app/repos

  # Django Backend
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
        DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
        DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
        DJANGO_SECRET: ${DJANGO_SECRET}
        DEBUG: ${DJANGO_DEBUG}
        DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        HOST_IP: ${HOST_IP}
        DOCKER_HOST: "tcp://dind:2375"
    volumes:
      - ./backend:/app
      - repos_data:/app/repos
    depends_on:
      - db
      - dind
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: >
      sh -c "python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py createsuperuser --no-input || true &&
            python manage.py runserver 0.0.0.0:8000"

  # Next.js Frontend
  next:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        DEBUG: ${NEXT_DEBUG}
        HOST_IP: ${HOST_IP}
        API_URL: ${NEXT_PUBLIC_BACKEND_URL}
    volumes:
      - ./frontend:/app
    networks:
      - app-network
    expose:
      - "3000"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
      - next
    networks:
      - app-network

volumes:
  postgres_data:
  dind_data:
  repos_data:

networks:
  app-network:
    driver: bridge
